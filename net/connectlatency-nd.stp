#!/usr/bin/stap

global duration;
global ts[65535];
global min_ns;

probe begin
{
    if (argv_1 != "") {
        min_ns = strtol(argv_1, 10) * 1000000;
        printf("Only tracing events slower than %s ms.\n", argv_1);
    } else {
        min_ns = 0;
    }

    printf("%-24s %-6s %-14s %-4s %s\n", "TIME", "PID", "COMM", "FD",
        "DURATION");
}

probe syscall.connect
{
    ts[tid(), long_arg(2)] = gettimeofday_ns();
}

probe syscall.connect.return
{
    fd = @entry(long_arg(2));
    last = ts[tid(), fd];
    if (last) {
        delta = gettimeofday_ns() - last;
        if (delta >= min_ns) {
            printf("%-24s %-6d %-14s %-4d %d ms\n",
                ctime(gettimeofday_s()),
                pid(), execname(), fd, delta / 1000000);
            duration <<< delta;
        }
        delete ts[tid(), fd];
    }
}

probe end
{
    printf("\nDuration (ns):\n");
    if (@count(duration)) { print(@hist_log(duration)); }
}
